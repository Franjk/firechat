{"version":3,"sources":["components/ChatMessage.js","components/ChatRoom.js","components/SignIn.js","components/SignOut.js","App.js","index.js"],"names":["ChatMessage","props","auth","useAuth","message","text","uid","photoURL","messageClass","currentUser","className","src","alt","ChatRoom","dummy","useRef","firebase","useFirebaseApp","firebase_","messagesRef","useFirestore","collection","query","orderBy","limit","messages","useFirestoreCollectionData","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","add","createdAt","firestore","FieldValue","serverTimestamp","current","scrollIntoView","behavior","data","map","msg","NO_ID_FIELD","ref","onSubmit","value","onChange","target","type","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","signOut","App","user","useUser","ReactDOM","render","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","document","getElementById"],"mappings":"6PAoBeA,EAjBK,SAACC,GACnB,IAAMC,EAAOC,cADgB,EAEGF,EAAMG,QAA9BC,EAFqB,EAErBA,KAAMC,EAFe,EAEfA,IAAKC,EAFU,EAEVA,SACbC,EAAeF,IAAQJ,EAAKO,YAAYH,IAAM,OAAS,WAC7D,OACE,sBAAKI,UAAS,kBAAaF,GAA3B,UACE,qBACEG,IACEJ,GAAY,wDAEdK,IAAI,YAEN,4BAAIP,QCwCKQ,MA7Cf,WAAqB,IAAD,EACZC,EAAQC,mBAERC,EAAWC,cAAiBC,UAC5BhB,EAAOC,cACPgB,EAAcC,cAAeC,WAAW,YACxCC,EAAQH,EAAYI,QAAQ,aAAaC,MAAM,IAE/CC,EAAWC,YAA2BJ,GAR1B,EAUgBK,mBAAS,IAVzB,mBAUXC,EAVW,KAUAC,EAVA,KAYZC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAEQ/B,EAAKO,YAAvBH,EAFU,EAEVA,IAAKC,EAFK,EAELA,SAFK,SAGZY,EAAYe,IAAI,CACpB7B,KAAMuB,EACNO,UAAWnB,EAASoB,UAAUC,WAAWC,kBACzChC,MACAC,aAPgB,OAUlBsB,EAAa,IACbf,EAAMyB,QAAQC,eAAe,CAAEC,SAAU,WAXvB,2CAAH,sDAcjB,OACE,qCACE,2CACGhB,EAASiB,YADZ,aACG,EAAeC,KAAI,SAACC,GAAD,OAClB,cAAC,EAAD,CAAmCxC,QAASwC,GAA1BA,EAAIC,gBAExB,sBAAMC,IAAKhC,OAEb,uBAAMiC,SAAUjB,EAAhB,UACE,uBACEkB,MAAOpB,EACPqB,SAAU,SAAClB,GAAD,OAAOF,EAAaE,EAAEmB,OAAOF,UAEzC,wBAAQG,KAAK,SAAb,2BCpCOC,EAVA,WACb,IAAMpC,EAAWC,cAAiBC,UAC5BhB,EAAOC,cAKb,OAAO,wBAAQkD,QAJU,WACvB,IAAMC,EAAW,IAAItC,EAASd,KAAKqD,mBACnCrD,EAAKsD,gBAAgBF,IAEhB,kCCAMG,EAPC,WACd,IAAMvD,EAAOC,cACb,OACED,EAAKO,aAAe,wBAAQ4C,QAAS,kBAAMnD,EAAKwD,WAA5B,uBCkBTC,MAdf,WAAgB,IACAC,EAASC,cAAfnB,KAER,OACE,sBAAKhC,UAAU,MAAf,UACE,mCACE,sEACA,cAAC,EAAD,OAEF,kCAAUkD,EAAO,cAAC,EAAD,IAAe,cAAC,EAAD,UCFtCE,IAASC,OACP,cAAC,IAAD,CAAqBC,eAXA,CACrBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBAIf,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.eeeaf3f5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useAuth } from 'reactfire';\r\n\r\nconst ChatMessage = (props) => {\r\n  const auth = useAuth();\r\n  const { text, uid, photoURL } = props.message;\r\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\r\n  return (\r\n    <div className={`message ${messageClass}`}>\r\n      <img\r\n        src={\r\n          photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'\r\n        }\r\n        alt='profile'\r\n      />\r\n      <p>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n","import React, { useState, useRef } from 'react';\r\nimport {\r\n  useFirebaseApp,\r\n  useFirestore,\r\n  useFirestoreCollectionData,\r\n  useAuth\r\n} from 'reactfire';\r\n\r\nimport ChatMessage from './ChatMessage';\r\n\r\nfunction ChatRoom() {\r\n  const dummy = useRef();\r\n\r\n  const firebase = useFirebaseApp().firebase_;\r\n  const auth = useAuth();\r\n  const messagesRef = useFirestore().collection('messages');\r\n  const query = messagesRef.orderBy('createdAt').limit(25);\r\n\r\n  const messages = useFirestoreCollectionData(query);\r\n\r\n  const [formValue, setFormValue] = useState('');\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const { uid, photoURL } = auth.currentUser;\r\n    await messagesRef.add({\r\n      text: formValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid,\r\n      photoURL\r\n    });\r\n\r\n    setFormValue('');\r\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        {messages.data?.map((msg) => (\r\n          <ChatMessage key={msg.NO_ID_FIELD} message={msg} />\r\n        ))}\r\n        <span ref={dummy}></span>\r\n      </main>\r\n      <form onSubmit={sendMessage}>\r\n        <input\r\n          value={formValue}\r\n          onChange={(e) => setFormValue(e.target.value)}\r\n        />\r\n        <button type='submit'>‚ñ∂</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;\r\n","import React from 'react';\r\nimport { useAuth, useFirebaseApp } from 'reactfire';\r\n\r\nconst SignIn = () => {\r\n  const firebase = useFirebaseApp().firebase_;\r\n  const auth = useAuth();\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  };\r\n  return <button onClick={signInWithGoogle}>Sign in with Google</button>;\r\n};\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\nimport { useAuth } from 'reactfire';\r\n\r\nconst SignOut = () => {\r\n  const auth = useAuth();\r\n  return (\r\n    auth.currentUser && <button onClick={() => auth.signOut()}>Sign Out</button>\r\n  );\r\n};\r\n\r\nexport default SignOut;\r\n","import './App.css';\n\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { useUser } from 'reactfire';\n\nimport ChatRoom from './components/ChatRoom';\nimport SignIn from './components/SignIn';\nimport SignOut from './components/SignOut';\n\nfunction App() {\n  const { data: user } = useUser();\n\n  return (\n    <div className='App'>\n      <header>\n        <h1>‚öõÔ∏èüî•üí¨</h1>\n        <SignOut />\n      </header>\n      <section>{user ? <ChatRoom /> : <SignIn />}</section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { FirebaseAppProvider } from 'reactfire';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyB3HXGtiOIYb9EAXUK0osUuAIBtSPUxKtU',\n  authDomain: 'fir-superchat-6ad11.firebaseapp.com',\n  projectId: 'fir-superchat-6ad11',\n  storageBucket: 'fir-superchat-6ad11.appspot.com',\n  messagingSenderId: '663554768694',\n  appId: '1:663554768694:web:2b7b4e18d7e97d5e543d97',\n  measurementId: 'G-J5M4TJ715R'\n};\n\nReactDOM.render(\n  <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n    <App />\n  </FirebaseAppProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}